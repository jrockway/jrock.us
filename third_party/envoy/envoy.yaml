node:
    cluster: test
admin:
    access_log_path: /tmp/admin_access.log
    address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
static_resources:
    listeners:
        - name: http_listener
          address:
              socket_address: { address: 0.0.0.0, port_value: 8123 }
          filter_chains:
              - filters:
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_http
                          route_config:
                              virtual_hosts:
                                  - name: all
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          direct_response:
                                              status: 200
                                              body:
                                                  inline_string: "OK"
                          http_filters:
                              - name: envoy.router
tracing:
    http:
        name: envoy.dynamic.ot
        typed_config:
            "@type": type.googleapis.com/envoy.config.trace.v2.DynamicOtConfig
            library: /usr/local/lib/libjaegertracing_plugin.so
            config:
                service_name: public-ingress
                sampler:
                    type: const
                    param: 1
                reporter:
                    localAgentHostPort: localhost:6831
                headers:
                    jaegerDebugHeader: jaeger-debug-id
                    jaegerBaggageHeader: jaeger-baggage
                    traceBaggageHeaderPrefix: uberctx-
                baggage_restrictions:
                    denyBaggageOnInitializationFailure: false
                    hostPort: ""
