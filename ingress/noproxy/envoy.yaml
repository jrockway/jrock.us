node:
    locality:
        region: do-nyc1
overload_manager:
    refresh_interval: 0.25s
    resource_monitors:
        - name: "envoy.resource_monitors.fixed_heap"
          typed_config:
              "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
              max_heap_size_bytes: 64000000 # 64MB
    actions:
        - name: "envoy.overload_actions.shrink_heap"
          triggers:
              - name: "envoy.resource_monitors.fixed_heap"
                threshold:
                    value: 0.95
        - name: "envoy.overload_actions.stop_accepting_requests"
          triggers:
              - name: "envoy.resource_monitors.fixed_heap"
                threshold:
                    value: 0.98
admin:
    access_log_path: /tmp/admin_access.log
    address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
static_resources:
    listeners:
        - name: https_noproxy_listener
          address:
              socket_address: { address: 0.0.0.0, port_value: 443 }
          listener_filters:
              - name: "envoy.listener.tls_inspector"
                typed_config: {}
          per_connection_buffer_limit_bytes: 32768
          filter_chains:
              - filter_chain_match:
                    server_names: ["*.jrock.us"]
                transport_socket:
                    name: envoy.transport_sockets.tls
                    typed_config:
                        "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
                        common_tls_context:
                            alpn_protocols: ["h2", "http/1.1"]
                            tls_certificate_sds_secret_configs:
                                sds_config:
                                    path: /etc/envoy/sds.yaml
                filters:
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          common_http_protocol_options:
                              idle_timeout: 3600s
                          http2_protocol_options:
                              max_concurrent_streams: 100
                              initial_stream_window_size: 65536 # 64 KiB
                              initial_connection_window_size: 1048576 # 1 MiB
                          stream_idle_timeout: 3600s
                          request_timeout: 3600s
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_noproxy_jrock-us
                          route_config:
                              virtual_hosts:
                                  - name: registry.jrock.us
                                    domains: ["registry.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              timeout: 360s
                                              cluster: docker-registry
                                    retry_policy:
                                        num_retries: 3
                                        retry_on: "5xx,reset"
                                        per_try_timeout: 120s
                                  - name: fallback
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          direct_response:
                                              status: 404
                                              body:
                                                  inline_string: "Not found!\n"
                          http_filters:
                              - name: envoy.router
    clusters:
        - name: docker-registry
          type: strict_dns
          lb_policy: random
          connect_timeout: 1s
          circuit_breakers: {}
          outlier_detection: {}
          dns_lookup_family: V4_ONLY
          upstream_connection_options:
              tcp_keepalive: {}
          health_checks:
              - timeout: 1s
                interval: 10s
                healthy_threshold: 1
                unhealthy_threshold: 2
                http_health_check:
                    path: "/"
          load_assignment:
              cluster_name: docker-registry
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: registry.docker-registry.svc.cluster.local.
                                      port_value: 80
        - name: observability:jaeger-collector-headless:zipkin
          type: strict_dns
          lb_policy: random
          connect_timeout: 1s
          circuit_breakers: {}
          outlier_detection: {}
          dns_lookup_family: V4_ONLY
          upstream_connection_options:
              tcp_keepalive: {}
          health_checks:
              - timeout: 1s
                interval: 10s
                healthy_threshold: 1
                unhealthy_threshold: 2
                http_health_check:
                    path: "/"
          load_assignment:
              cluster_name: observability:jaeger-collector-headless:zipkin
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: jaeger-collector-headless.observability.svc.cluster.local.
                                      port_value: 9411
                              health_check_config:
                                  port_value: 14269
tracing:
    http:
        name: envoy.zipkin
        typed_config:
            "@type": type.googleapis.com/envoy.config.trace.v2.ZipkinConfig
            collector_cluster: observability:jaeger-collector-headless:zipkin
            collector_endpoint: "/api/v2/spans"
            collector_endpoint_version: HTTP_JSON
            shared_span_context: false
layered_runtime:
    layers:
        - name: static_layer_0
          static_layer:
              overload:
                  global_downstream_max_connections: 50000
