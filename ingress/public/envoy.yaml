node:
    cluster: public-ingress
overload_manager:
    refresh_interval: 0.25s
    resource_monitors:
        - name: "envoy.resource_monitors.fixed_heap"
          typed_config:
              "@type": type.googleapis.com/envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig
              max_heap_size_bytes: 64000000 # 64MB
    actions:
        - name: "envoy.overload_actions.shrink_heap"
          triggers:
              - name: "envoy.resource_monitors.fixed_heap"
                threshold:
                    value: 0.95
        - name: "envoy.overload_actions.stop_accepting_requests"
          triggers:
              - name: "envoy.resource_monitors.fixed_heap"
                threshold:
                    value: 0.98
admin:
    access_log_path: /tmp/admin_access.log
    address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
static_resources:
    listeners:
        - name: http_listener
          address:
              socket_address: { address: 0.0.0.0, port_value: 80 }
          listener_filters:
              - name: "envoy.listener.proxy_protocol"
                typed_config: {}
          per_connection_buffer_limit_bytes: 32768
          filter_chains:
              - filters:
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_http
                          route_config:
                              virtual_hosts:
                                  - name: all
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          redirect:
                                              path_redirect: "/"
                                              https_redirect: true
                          http_filters:
                              - name: envoy.router
        - name: http_noproxy_listener
          address:
              socket_address: { address: 0.0.0.0, port_value: 81 }
          per_connection_buffer_limit_bytes: 32768
          filter_chains:
              - filters:
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_noproxy_http
                          route_config:
                              virtual_hosts:
                                  - name: all
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          redirect:
                                              path_redirect: "/"
                                              https_redirect: true
                          http_filters:
                              - name: envoy.router
        - name: https_listener
          address:
              socket_address: { address: 0.0.0.0, port_value: 443 }
          listener_filters:
              - name: "envoy.listener.proxy_protocol"
                typed_config: {}
              - name: "envoy.listener.tls_inspector"
                typed_config: {}
          per_connection_buffer_limit_bytes: 32768
          filter_chains:
              - filter_chain_match:
                    server_names: ["*.jrock.us", "jrock.us"]
                transport_socket:
                    name: envoy.transport_sockets.tls
                    typed_config:
                        "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
                        common_tls_context:
                            alpn_protocols: ["h2", "http/1.1"]
                            tls_certificates:
                                - certificate_chain:
                                      filename: "/jrock.us/tls.crt"
                                  private_key:
                                      filename: "/jrock.us/tls.key"
                filters:
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          common_http_protocol_options:
                              idle_timeout: 3600s
                          http2_protocol_options:
                              max_concurrent_streams: 100
                              initial_stream_window_size: 65536 # 64 KiB
                              initial_connection_window_size: 1048576 # 1 MiB
                          stream_idle_timeout: 3600s
                          request_timeout: 3600s
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_jrock-us
                          route_config:
                              virtual_hosts:
                                  - name: jrock.us
                                    domains: ["jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          redirect:
                                              host_redirect: "www.jrock.us"
                                              response_code: TEMPORARY_REDIRECT
                                  - name: www.jrock.us
                                    domains: ["www.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              cluster: www-jrock-us
                                  - name: registry.jrock.us
                                    domains: ["registry.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              timeout: 120s
                                              cluster: docker-registry
                                  - name: ci.jrock.us
                                    domains: ["ci.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              cluster: concourse
                                              upgrade_configs:
                                                  - upgrade_type: websocket
                                                    enabled: true
                                  - name: jaeger.jrock.us
                                    domains: ["jaeger.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              cluster: jaeger
                                  - name: prom.jrock.us
                                    domains: ["prom.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              cluster: prom
                                  - name: fallback
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          direct_response:
                                              status: 404
                                              body:
                                                  inline_string: "Not found!\n"
                          http_filters:
                              - name: envoy.ext_authz
                                typed_config:
                                    "@type": type.googleapis.com/envoy.config.filter.http.ext_authz.v2.ExtAuthz
                                    grpc_service:
                                        envoy_grpc:
                                            cluster_name: jsso-grpc
                                        timeout: 1s
                                    failure_mode_allow: false
                              - name: envoy.router
              - filters:
                    # port 443 traffic, but not TLS; redirect to https
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_https_no_tls
                          route_config:
                              virtual_hosts:
                                  - name: all
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          redirect:
                                              path_redirect: "/"
                                              https_redirect: true
                          http_filters:
                              - name: envoy.router
        - name: https_noproxy_listener
          address:
              socket_address: { address: 0.0.0.0, port_value: 444 }
          listener_filters:
              - name: "envoy.listener.tls_inspector"
                typed_config: {}
          per_connection_buffer_limit_bytes: 32768
          filter_chains:
              - filter_chain_match:
                    server_names: ["*.jrock.us"]
                transport_socket:
                    name: envoy.transport_sockets.tls
                    typed_config:
                        "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
                        common_tls_context:
                            alpn_protocols: ["h2", "http/1.1"]
                            tls_certificates:
                                - certificate_chain:
                                      filename: "/jrock.us/tls.crt"
                                  private_key:
                                      filename: "/jrock.us/tls.key"
                filters:
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          common_http_protocol_options:
                              idle_timeout: 3600s
                          http2_protocol_options:
                              max_concurrent_streams: 100
                              initial_stream_window_size: 65536 # 64 KiB
                              initial_connection_window_size: 1048576 # 1 MiB
                          stream_idle_timeout: 3600s
                          request_timeout: 3600s
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_noproxy_jrock-us
                          route_config:
                              virtual_hosts:
                                  - name: registry.jrock.us
                                    domains: ["registry.jrock.us"]
                                    routes:
                                        - match: { prefix: "/" }
                                          route:
                                              timeout: 120s
                                              cluster: docker-registry
                                  - name: fallback
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          direct_response:
                                              status: 404
                                              body:
                                                  inline_string: "Not found!\n"
                          http_filters:
                              - name: envoy.router
              - filters:
                    # port 443 traffic, but not TLS; redirect to https
                    - name: envoy.http_connection_manager
                      typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                          codec_type: auto
                          use_remote_address: true
                          tracing:
                              operation_name: ingress
                          stat_prefix: ingress_https_noproxy_no_tls
                          route_config:
                              virtual_hosts:
                                  - name: all
                                    domains: ["*"]
                                    routes:
                                        - match: { prefix: "/" }
                                          redirect:
                                              path_redirect: "/"
                                              https_redirect: true
                          http_filters:
                              - name: envoy.router
    clusters:
        - name: jsso-grpc
          type: static
          lb_policy: random
          connect_timeout: 1s
          http2_protocol_options: {}
          health_checks:
              - timeout: 1s
                interval: 10s
                healthy_threshold: 1
                unhealthy_threshold: 1
                grpc_health_check: {}
          load_assignment:
              cluster_name: jsso-grpc
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: 127.0.0.1
                                      port_value: 9000
        - name: www-jrock-us
          type: strict_dns
          lb_policy: random
          connect_timeout: 1s
          load_assignment:
              cluster_name: www-jrock-us
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: www-jrock-us.www.svc.cluster.local
                                      port_value: 80
        - name: docker-registry
          type: strict_dns
          lb_policy: random
          connect_timeout: 1s
          load_assignment:
              cluster_name: docker-registry
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: registry.docker-registry.svc.cluster.local
                                      port_value: 80
        - name: concourse
          type: strict_dns
          lb_policy: random
          connect_timeout: 1s
          load_assignment:
              cluster_name: concourse
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: concourse-web.concourse.svc.cluster.local
                                      port_value: 8080
        - name: prom
          type: logical_dns
          lb_policy: random
          connect_timeout: 1s
          load_assignment:
              cluster_name: prom
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: prometheus-k8s.monitoring.svc.cluster.local
                                      port_value: 9090
        - name: jaeger
          type: logical_dns
          lb_policy: random
          connect_timeout: 1s
          load_assignment:
              cluster_name: jaeger
              endpoints:
                  - lb_endpoints:
                        - endpoint:
                              address:
                                  socket_address:
                                      address: jaeger-query.observability.svc.cluster.local
                                      port_value: 16686

tracing:
    http:
        name: envoy.dynamic.ot
        typed_config:
            "@type": type.googleapis.com/envoy.config.trace.v2.DynamicOtConfig
            library: /usr/local/lib/libjaegertracing_plugin.so
            config:
                service_name: public-ingress
                sampler:
                    type: const
                    param: 1
                reporter:
                    localAgentHostPort: localhost:6831
                headers:
                    jaegerDebugHeader: jaeger-debug-id
                    jaegerBaggageHeader: jaeger-baggage
                    traceBaggageHeaderPrefix: uberctx-
                baggage_restrictions:
                    denyBaggageOnInitializationFailure: false
                    hostPort: ""
