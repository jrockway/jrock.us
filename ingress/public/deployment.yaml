apiVersion: apps/v1
kind: Deployment
metadata:
    name: envoy
    annotations:
        "sidecar.jaegertracing.io/inject": "jaeger"
        argocd.argoproj.io/sync-wave: "5"
spec:
    replicas: 2
    template:
        spec:
            affinity:
                podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        - weight: 100
                          podAffinityTerm:
                              labelSelector:
                                  matchExpressions:
                                      - key: app
                                        operator: In
                                        values:
                                            - public-ingress
                              topologyKey: "kubernetes.io/hostname"
            containers:
                - name: envoy
                  image: envoy
                  command:
                      - "envoy"
                  env:
                      - name: MY_NODE_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: spec.nodeName
                      - name: MY_POD_NAME
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.name
                  args:
                      - "-c"
                      - "/etc/envoy/envoy.yaml"
                      - "--service-node"
                      - "$(MY_POD_NAME)"
                      - "--service-zone"
                      - "$(MY_NODE_NAME)"
                      - "--service-cluster"
                      - "ingress:public:https"
                  volumeMounts:
                      - name: envoy-config
                        mountPath: /etc/envoy
                      - name: jrock-us-certs
                        mountPath: /jrock.us
                      - name: envoy-client-certs
                        mountPath: /tls
                      - name: sockets
                        mountPath: /sockets
                  readinessProbe:
                      httpGet:
                          path: /ready
                          port: 9901
                  livenessProbe:
                      httpGet:
                          path: /server_info
                          port: 9901
                  ports:
                      - name: envoy-admin
                        containerPort: 9901
                      - name: http
                        containerPort: 80
                      - name: https
                        containerPort: 443
                  resources:
                      requests:
                          cpu: 100m
                          memory: "100Mi"
                      limits:
                          memory: "100Mi"
                - name: jsso
                  image: jsso
                  volumeMounts:
                      - name: envoy-policy
                        mountPath: /policy
                      - name: sockets
                        mountPath: /sockets
                  ports:
                      - name: jsso-admin
                        containerPort: 8081
                  livenessProbe:
                      httpGet:
                          path: /metrics
                          port: 8081
                  readinessProbe:
                      httpGet:
                          path: /metrics
                          port: 8081
                  env:
                      - name: POLICY_PATH
                        value: "/policy/policy.rego"
                      - name: GRPC_ADDRESS
                        value: "unix:/sockets/jsso"
                      - name: DEBUG_ADDRESS
                        value: "0.0.0.0:8081"
                      - name: JAEGER_SERVICE_NAME
                        value: "jsso"
                      - name: JAEGER_REPORTER_LOG_SPANS
                        value: "false"
                      - name: LOG_METADATA
                        value: "true"
                      - name: LOG_PAYLOADS
                        value: "true"
                  resources:
                      requests:
                          cpu: 100m
                          memory: "30Mi"
                      limits:
                          memory: "30Mi"
                - name: jsso2
                  image: jsso2
                  command:
                      - "jsso2-envoy-authz"
                  volumeMounts:
                      - name: sockets
                        mountPath: /sockets
                  ports:
                      - name: jsso2-admin
                        containerPort: 8181
                  livenessProbe:
                      httpGet:
                          path: /healthz
                          port: 8181
                  readinessProbe:
                      httpGet:
                          path: /healthz
                          port: 8181
                  env:
                      - name: GRPC_ADDRESS
                        value: "unix:/sockets/jsso2"
                      - name: HTTP_ADDRESS
                        value: "127.0.0.1:8180"
                      - name: DEBUG_ADDRESS
                        value: "0.0.0.0:8181"
                      - name: JAEGER_SERVICE_NAME
                        value: "jsso"
                      - name: LOG_METADATA
                        value: "true"
                      - name: LOG_PAYLOADS
                        value: "true"
                      - name: JSSO_SERVER_ADDRESS
                        value: "dns:///jsso2.jsso2.svc.cluster.local:4000"
                      - name: PLAINTEXT_USERNAME_HEADER
                        value: x-remote-user
                  resources:
                      requests:
                          cpu: 100m
                          memory: "30Mi"
                      limits:
                          memory: "30Mi"
            volumes:
                - name: envoy-config
                  configMap:
                      name: envoy-config
                - name: envoy-policy
                  configMap:
                      name: envoy-policy
                - name: jrock-us-certs
                  secret:
                      secretName: jrock-us-tls
                - name: envoy-client-certs
                  secret:
                      secretName: envoy-client-tls
                - name: sockets
                  emptyDir: {}
            imagePullSecrets:
                - name: registry-credentials
